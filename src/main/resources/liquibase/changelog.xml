<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

    <changeSet id="createTables" author="hnahapetyan">
        <sql>
            create table if not exists category
            (
                id   int auto_increment
                primary key,
                name varchar(255) null
                );

            create table if not exists databasechangelog
            (
                ID            varchar(255) not null,
                AUTHOR        varchar(255) not null,
                FILENAME      varchar(255) not null,
                DATEEXECUTED  datetime     not null,
                ORDEREXECUTED int          not null,
                EXECTYPE      varchar(10)  not null,
                MD5SUM        varchar(35)  null,
                DESCRIPTION   varchar(255) null,
                COMMENTS      varchar(255) null,
                TAG           varchar(255) null,
                LIQUIBASE     varchar(20)  null,
                CONTEXTS      varchar(255) null,
                LABELS        varchar(255) null,
                DEPLOYMENT_ID varchar(10)  null
                );

            create table if not exists databasechangeloglock
            (
                ID          int          not null
                primary key,
                LOCKED      bit          not null,
                LOCKGRANTED datetime     null,
                LOCKEDBY    varchar(255) null
                );

            create table if not exists user
            (
                id       int auto_increment
                primary key,
                email    varchar(255)           null,
                name     varchar(255)           null,
                password varchar(255)           null,
                role     enum ('ADMIN', 'USER') null,
                surname  varchar(255)           null
                );

            create table if not exists todo
            (
                id          int auto_increment
                primary key,
                status      enum ('DONE', 'IN_PROGRESS', 'NOT_STARTED') null,
                title       varchar(255)                                null,
                category_id int                                         null,
                user_id     int                                         null,
                constraint FK2ft3dfk1d3uw77pas3xqwymm7
                foreign key (user_id) references user (id),
                constraint FKeh6uro943emclp6kr1d4wysmo
                foreign key (category_id) references category (id)
                );
        </sql>
    </changeSet>




</databaseChangeLog>
